# Generated by Django 2.2.10 on 2020-02-26 01:04

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AvailableDivision',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDateTime', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updatedDateTime', models.DateTimeField(auto_now=True, verbose_name='Last modified date')),
                ('division_maxTeamsPerSchool', models.PositiveIntegerField(blank=True, help_text='Leave blank for no limit. Will override limit on event.', null=True, verbose_name='Max teams per school')),
                ('division_maxTeamsForDivision', models.PositiveIntegerField(blank=True, help_text='Leave blank for no limit. Will override limit on event.', null=True, verbose_name='Max teams for division')),
                ('division_billingType', models.CharField(choices=[('event', 'Event settings'), ('team', 'By team'), ('student', 'By student')], default='event', max_length=15, verbose_name='Billing type')),
                ('division_entryFee', models.PositiveIntegerField(blank=True, null=True, verbose_name='Division entry fee')),
            ],
            options={
                'verbose_name': 'Available Division',
                'ordering': ['event', 'division'],
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDateTime', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updatedDateTime', models.DateTimeField(auto_now=True, verbose_name='Last modified date')),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Division',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creationDateTime', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updatedDateTime', models.DateTimeField(auto_now=True, verbose_name='Last modified date')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('eventType', models.CharField(choices=[('competition', 'Competition'), ('workshop', 'Workshop')], default='competition', help_text='Competition is standard event with teams and students. Workshop has no teams or students, just workshop attendees.', max_length=15, verbose_name='Event type')),
                ('startDate', models.DateField(verbose_name='Event start date')),
                ('endDate', models.DateField(verbose_name='Event end date')),
                ('registrationsOpenDate', models.DateField(verbose_name='Registrations open date')),
                ('registrationsCloseDate', models.DateField(verbose_name='Registration close date')),
                ('maxMembersPerTeam', models.PositiveIntegerField(help_text='Resets to 0 for workshops', verbose_name='Max members per team')),
                ('event_maxTeamsPerSchool', models.PositiveIntegerField(blank=True, help_text='Leave blank for no limit. Only enforced on the mentor signup page, can be overridden in the admin portal.', null=True, verbose_name='Max teams per school')),
                ('event_maxTeamsForEvent', models.PositiveIntegerField(blank=True, help_text='Leave blank for no limit. Only enforced on the mentor signup page, can be overridden in the admin portal.', null=True, verbose_name='Max teams for event')),
                ('event_billingType', models.CharField(choices=[('team', 'By team'), ('student', 'By student')], default='team', max_length=15, verbose_name='Billing type')),
                ('event_defaultEntryFee', models.PositiveIntegerField(verbose_name='Default entry fee')),
                ('event_specialRateNumber', models.PositiveIntegerField(blank=True, help_text='The number of teams/ students specified will be billed at this rate. Subsequent teams/ students will be billed at the default rate. Leave blank for no special rate.', null=True, verbose_name='Special rate number')),
                ('event_specialRateFee', models.PositiveIntegerField(blank=True, null=True, verbose_name='Special rate fee')),
                ('eventDetails', models.TextField(blank=True, verbose_name='Event details')),
                ('location', models.TextField(blank=True, verbose_name='Location')),
                ('additionalInvoiceMessage', models.TextField(blank=True, help_text='This appears below the state based invoice message on the invoice.', verbose_name='Additional invoice message')),
            ],
            options={
                'verbose_name': 'Event',
                'ordering': ['-startDate'],
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('year', models.PositiveIntegerField(primary_key=True, serialize=False, verbose_name='Year')),
                ('creationDateTime', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('updatedDateTime', models.DateTimeField(auto_now=True, verbose_name='Last modified date')),
            ],
            options={
                'verbose_name': 'Year',
                'ordering': ['-year'],
            },
        ),
    ]
